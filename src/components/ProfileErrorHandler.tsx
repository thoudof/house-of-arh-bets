
import { useAuth } from '@/hooks/useAuth';
import { useTelegram } from '@/hooks/useTelegram';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';

export const ProfileErrorHandler = () => {
  const { user, loading, isAuthenticated, signInWithTelegram } = useAuth();
  const { user: telegramUser, isReady } = useTelegram();

  const handleForceSignIn = async () => {
    console.log('üîÑ Force sign in triggered by user');
    try {
      const result = await signInWithTelegram();
      if (result.error) {
        console.error('‚ùå Force sign in failed:', result.error);
      } else {
        console.log('‚úÖ Force sign in successful');
      }
    } catch (error) {
      console.error('‚ùå Force sign in error:', error);
    }
  };

  if (loading) {
    return (
      <Card className="max-w-md mx-auto mt-8">
        <CardContent className="p-6 text-center">
          <div>–ó–∞–≥—Ä—É–∑–∫–∞...</div>
        </CardContent>
      </Card>
    );
  }

  if (!isReady) {
    return (
      <Card className="max-w-md mx-auto mt-8">
        <CardContent className="p-6 text-center">
          <div>–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Telegram...</div>
        </CardContent>
      </Card>
    );
  }

  if (!telegramUser) {
    return (
      <Card className="max-w-md mx-auto mt-8">
        <CardHeader>
          <CardTitle>–û—à–∏–±–∫–∞ Telegram</CardTitle>
        </CardHeader>
        <CardContent className="space-y-4">
          <p>–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Telegram</p>
          <div className="text-sm text-muted-foreground">
            <p>Telegram ready: {isReady ? 'Yes' : 'No'}</p>
            <p>Current URL: {window.location.href}</p>
          </div>
        </CardContent>
      </Card>
    );
  }

  if (!isAuthenticated) {
    return (
      <Card className="max-w-md mx-auto mt-8">
        <CardHeader>
          <CardTitle>–¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è</CardTitle>
        </CardHeader>
        <CardContent className="space-y-4">
          <p>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω</p>
          <div className="text-sm text-muted-foreground space-y-1">
            <p>Telegram ID: {telegramUser.id}</p>
            <p>–ò–º—è: {telegramUser.first_name} {telegramUser.last_name}</p>
            <p>Username: {telegramUser.username}</p>
            <p>Auth User ID: {user?.id || 'None'}</p>
          </div>
          <Button onClick={handleForceSignIn} className="w-full">
            –í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Telegram
          </Button>
        </CardContent>
      </Card>
    );
  }

  return (
    <Card className="max-w-md mx-auto mt-8">
      <CardHeader>
        <CardTitle>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω</CardTitle>
      </CardHeader>
      <CardContent className="space-y-4">
        <div className="text-sm space-y-1">
          <p>Auth User ID: {user?.id}</p>
          <p>Email: {user?.email}</p>
          <p>Telegram ID: {telegramUser.id}</p>
          <p>–ò–º—è: {telegramUser.first_name} {telegramUser.last_name}</p>
        </div>
      </CardContent>
    </Card>
  );
};
